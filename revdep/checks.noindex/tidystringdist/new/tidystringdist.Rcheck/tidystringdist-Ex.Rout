
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "tidystringdist"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('tidystringdist')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("tidy_comb")
> ### * tidy_comb
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tidy_comb
> ### Title: Tidy combine
> ### Aliases: tidy_comb tidy_comb.data.frame tidy_comb.default
> 
> ### ** Examples
> 
> tidy_comb(iris, "this", Species)
[90m# A tibble: 3 x 2[39m
  V1    V2        
[90m*[39m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m     
[90m1[39m this  setosa    
[90m2[39m this  versicolor
[90m3[39m this  virginica 
> tidy_comb(state.name, "Paris")
[90m# A tibble: 50 x 2[39m
   V1    V2         
 [90m*[39m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m      
[90m 1[39m Paris Alabama    
[90m 2[39m Paris Alaska     
[90m 3[39m Paris Arizona    
[90m 4[39m Paris Arkansas   
[90m 5[39m Paris California 
[90m 6[39m Paris Colorado   
[90m 7[39m Paris Connecticut
[90m 8[39m Paris Delaware   
[90m 9[39m Paris Florida    
[90m10[39m Paris Georgia    
[90m# â€¦ with 40 more rows[39m
> 
> 
> 
> cleanEx()
> nameEx("tidy_comb_all")
> ### * tidy_comb_all
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tidy_comb_all
> ### Title: Tidy combine all
> ### Aliases: tidy_comb_all tidy_comb_all.data.frame tidy_comb_all.default
> 
> ### ** Examples
> 
> tidy_comb_all(iris, Species)
[90m# A tibble: 3 x 2[39m
  V1         V2        
[90m*[39m [3m[90m<chr>[39m[23m      [3m[90m<chr>[39m[23m     
[90m1[39m setosa     versicolor
[90m2[39m setosa     virginica 
[90m3[39m versicolor virginica 
> tidy_comb_all(state.name)
[90m# A tibble: 1,225 x 2[39m
   V1      V2         
 [90m*[39m [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m      
[90m 1[39m Alabama Alaska     
[90m 2[39m Alabama Arizona    
[90m 3[39m Alabama Arkansas   
[90m 4[39m Alabama California 
[90m 5[39m Alabama Colorado   
[90m 6[39m Alabama Connecticut
[90m 7[39m Alabama Delaware   
[90m 8[39m Alabama Florida    
[90m 9[39m Alabama Georgia    
[90m10[39m Alabama Hawaii     
[90m# â€¦ with 1,215 more rows[39m
> 
> 
> 
> 
> cleanEx()
> nameEx("tidy_stringdist")
> ### * tidy_stringdist
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tidy_stringdist
> ### Title: Tidy stringdist calculation
> ### Aliases: tidy_stringdist
> 
> ### ** Examples
> 
> proust <- tidy_comb_all(c("Albertine", "FranÃ§oise", "Gilberte", "Odette", "Charles"))
> tidy_stringdist(proust)
Warning in do_dist(a = b, b = a, method = method, weight = weight, q = q,  :
  Non-printable ascii or non-ascii characters in soundex. Results may be unreliable. See ?printable_ascii.
[90m# A tibble: 10 x 12[39m
   V1    V2      osa    lv    dl hamming   lcs qgram cosine jaccard    jw
 [90m*[39m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m Albeâ€¦ Franâ€¦     7     7     7       7    12    10  0.497   0.692 0.444
[90m 2[39m Albeâ€¦ Gilbâ€¦     4     4     4     [31mInf[39m     5     3  0.142   0.333 0.194
[90m 3[39m Albeâ€¦ Odetâ€¦     6     6     6     [31mInf[39m     9     9  0.428   0.8   0.389
[90m 4[39m Albeâ€¦ Charâ€¦     8     8     8     [31mInf[39m    12    10  0.544   0.75  0.579
[90m 5[39m Franâ€¦ Gilbâ€¦     8     8     8     [31mInf[39m    13    11  0.578   0.769 0.588
[90m 6[39m Franâ€¦ Odetâ€¦     8     8     8     [31mInf[39m    13    13  0.789   0.917 0.574
[90m 7[39m Franâ€¦ Charâ€¦     7     7     7     [31mInf[39m    12     8  0.496   0.667 0.495
[90m 8[39m Gilbâ€¦ Odetâ€¦     5     5     5     [31mInf[39m     8     8  0.4     0.778 0.375
[90m 9[39m Gilbâ€¦ Charâ€¦     7     7     7     [31mInf[39m    11     9  0.522   0.727 0.565
[90m10[39m Odetâ€¦ Charâ€¦     6     6     6     [31mInf[39m    11    11  0.761   0.9   0.563
[90m# â€¦ with 1 more variable: soundex [3m[90m<dbl>[90m[23m[39m
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.236 0.03 0.836 0.002 0.002 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
